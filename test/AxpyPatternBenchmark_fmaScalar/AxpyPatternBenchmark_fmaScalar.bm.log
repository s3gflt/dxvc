# JMH version: 1.35
# VM version: JDK 18.0.2, OpenJDK 64-Bit Server VM, 18.0.2+0
# VM invoker: /usr/lib/jvm/java-18-openjdk/bin/java
# VM options: --add-modules=jdk.incubator.vector
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: jvbench.axpy.AxpyPatternBenchmark.fmaScalar

# Run progress: 0.00% complete, ETA 00:08:20
# Fork: 1 of 5
WARNING: Using incubator modules: jdk.incubator.vector
# Warmup Iteration   1: 11.253 ops/s
# Warmup Iteration   2: 11.276 ops/s
# Warmup Iteration   3: 11.265 ops/s
# Warmup Iteration   4: 11.264 ops/s
# Warmup Iteration   5: 11.233 ops/s
Iteration   1: 11.263 ops/s
Iteration   2: 11.257 ops/s
Iteration   3: 11.257 ops/s
Iteration   4: 11.267 ops/s
Iteration   5: 11.263 ops/s

# Run progress: 20.00% complete, ETA 00:06:58
# Fork: 2 of 5
WARNING: Using incubator modules: jdk.incubator.vector
# Warmup Iteration   1: 11.327 ops/s
# Warmup Iteration   2: 11.290 ops/s
# Warmup Iteration   3: 11.315 ops/s
# Warmup Iteration   4: 11.309 ops/s
# Warmup Iteration   5: 11.270 ops/s
Iteration   1: 11.261 ops/s
Iteration   2: 11.303 ops/s
Iteration   3: 11.122 ops/s
Iteration   4: 11.284 ops/s
Iteration   5: 11.229 ops/s

# Run progress: 40.00% complete, ETA 00:05:10
# Fork: 3 of 5
WARNING: Using incubator modules: jdk.incubator.vector
# Warmup Iteration   1: 11.146 ops/s
# Warmup Iteration   2: 11.215 ops/s
# Warmup Iteration   3: 11.226 ops/s
# Warmup Iteration   4: 11.235 ops/s
# Warmup Iteration   5: 11.236 ops/s
Iteration   1: 11.213 ops/s
Iteration   2: 11.226 ops/s
Iteration   3: 11.210 ops/s
Iteration   4: 11.247 ops/s
Iteration   5: 11.212 ops/s

# Run progress: 60.00% complete, ETA 00:03:26
# Fork: 4 of 5
WARNING: Using incubator modules: jdk.incubator.vector
# Warmup Iteration   1: 11.259 ops/s
# Warmup Iteration   2: 11.253 ops/s
# Warmup Iteration   3: 11.312 ops/s
# Warmup Iteration   4: 11.222 ops/s
# Warmup Iteration   5: 11.259 ops/s
Iteration   1: 11.245 ops/s
Iteration   2: 11.256 ops/s
Iteration   3: 11.268 ops/s
Iteration   4: 11.279 ops/s
Iteration   5: 11.263 ops/s

# Run progress: 80.00% complete, ETA 00:01:42
# Fork: 5 of 5
WARNING: Using incubator modules: jdk.incubator.vector
# Warmup Iteration   1: 11.297 ops/s
# Warmup Iteration   2: 11.269 ops/s
# Warmup Iteration   3: 11.274 ops/s
# Warmup Iteration   4: 11.086 ops/s
# Warmup Iteration   5: 11.130 ops/s
Iteration   1: 11.147 ops/s
Iteration   2: 11.133 ops/s
Iteration   3: 10.904 ops/s
Iteration   4: 11.100 ops/s
Iteration   5: 11.027 ops/s


Result "jvbench.axpy.AxpyPatternBenchmark.fmaScalar":
  11.210 ±(99.9%) 0.069 ops/s [Average]
  (min, avg, max) = (10.904, 11.210, 11.303), stdev = 0.092
  CI (99.9%): [11.141, 11.278] (assumes normal distribution)


# Run complete. Total time: 00:08:33

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

NOTE: Current JVM experimentally supports Compiler Blackholes, and they are in use. Please exercise
extra caution when trusting the results, look into the generated code to check the benchmark still
works, and factor in a small probability of new VM bugs. Additionally, while comparisons between
different JVMs are already problematic, the performance difference caused by different Blackhole
modes can be very significant. Please make sure you use the consistent Blackhole mode for comparisons.

Benchmark                        Mode  Cnt   Score   Error  Units
AxpyPatternBenchmark.fmaScalar  thrpt   25  11.210 ± 0.069  ops/s
