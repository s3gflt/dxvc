# JMH version: 1.35
# VM version: JDK 18.0.2, OpenJDK 64-Bit Server VM, 18.0.2+0
# VM invoker: /usr/lib/jvm/java-18-openjdk/bin/java
# VM options: --add-modules=jdk.incubator.vector
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: jvbench.swaptions.SwaptionsPatternBenchmark.conversion

# Run progress: 0.00% complete, ETA 00:08:20
# Fork: 1 of 5
WARNING: Using incubator modules: jdk.incubator.vector
# Warmup Iteration   1: 0.505 ops/s
# Warmup Iteration   2: 0.547 ops/s
# Warmup Iteration   3: 0.537 ops/s
# Warmup Iteration   4: 0.535 ops/s
# Warmup Iteration   5: 0.534 ops/s
Iteration   1: 0.579 ops/s
Iteration   2: 0.579 ops/s
Iteration   3: 0.579 ops/s
Iteration   4: 0.533 ops/s
Iteration   5: 0.524 ops/s

# Run progress: 20.00% complete, ETA 00:07:37
# Fork: 2 of 5
WARNING: Using incubator modules: jdk.incubator.vector
# Warmup Iteration   1: 0.528 ops/s
# Warmup Iteration   2: 0.550 ops/s
# Warmup Iteration   3: 0.545 ops/s
# Warmup Iteration   4: 0.545 ops/s
# Warmup Iteration   5: 0.559 ops/s
Iteration   1: 0.552 ops/s
Iteration   2: 0.542 ops/s
Iteration   3: 0.549 ops/s
Iteration   4: 0.553 ops/s
Iteration   5: 0.547 ops/s

# Run progress: 40.00% complete, ETA 00:05:37
# Fork: 3 of 5
WARNING: Using incubator modules: jdk.incubator.vector
# Warmup Iteration   1: 0.500 ops/s
# Warmup Iteration   2: 0.529 ops/s
# Warmup Iteration   3: 0.541 ops/s
# Warmup Iteration   4: 0.543 ops/s
# Warmup Iteration   5: 0.548 ops/s
Iteration   1: 0.539 ops/s
Iteration   2: 0.531 ops/s
Iteration   3: 0.533 ops/s
Iteration   4: 0.530 ops/s
Iteration   5: 0.526 ops/s

# Run progress: 60.00% complete, ETA 00:03:44
# Fork: 4 of 5
WARNING: Using incubator modules: jdk.incubator.vector
# Warmup Iteration   1: 0.498 ops/s
# Warmup Iteration   2: 0.529 ops/s
# Warmup Iteration   3: 0.530 ops/s
# Warmup Iteration   4: 0.523 ops/s
# Warmup Iteration   5: 0.545 ops/s
Iteration   1: 0.542 ops/s
Iteration   2: 0.530 ops/s
Iteration   3: 0.520 ops/s
Iteration   4: 0.522 ops/s
Iteration   5: 0.528 ops/s

# Run progress: 80.00% complete, ETA 00:01:52
# Fork: 5 of 5
WARNING: Using incubator modules: jdk.incubator.vector
# Warmup Iteration   1: 0.497 ops/s
# Warmup Iteration   2: 0.522 ops/s
# Warmup Iteration   3: 0.523 ops/s
# Warmup Iteration   4: 0.522 ops/s
# Warmup Iteration   5: 0.517 ops/s
Iteration   1: 0.543 ops/s
Iteration   2: 0.536 ops/s
Iteration   3: 0.523 ops/s
Iteration   4: 0.528 ops/s
Iteration   5: 0.518 ops/s


Result "jvbench.swaptions.SwaptionsPatternBenchmark.conversion":
  0.539 ±(99.9%) 0.013 ops/s [Average]
  (min, avg, max) = (0.518, 0.539, 0.579), stdev = 0.018
  CI (99.9%): [0.526, 0.553] (assumes normal distribution)


# Run complete. Total time: 00:09:22

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

NOTE: Current JVM experimentally supports Compiler Blackholes, and they are in use. Please exercise
extra caution when trusting the results, look into the generated code to check the benchmark still
works, and factor in a small probability of new VM bugs. Additionally, while comparisons between
different JVMs are already problematic, the performance difference caused by different Blackhole
modes can be very significant. Please make sure you use the consistent Blackhole mode for comparisons.

Benchmark                              Mode  Cnt  Score   Error  Units
SwaptionsPatternBenchmark.conversion  thrpt   25  0.539 ± 0.013  ops/s
